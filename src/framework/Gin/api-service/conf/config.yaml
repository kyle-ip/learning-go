version: v1                           # API 版本（修改时需要更新 Swagger）
mode: debug                           # 开发模式, debug, release, test
addr: :8080                           # HTTP 绑定端口
name: api-service                     # API Server 的名字
url: http://127.0.0.1:8080            # pingServer 函数请求的 API 服务器的 ip:port
max_ping_count: 10                    # pingServer 函数 try 的次数
jwt_secret: Rtg8BPKNEf2mB4mgvKONGPZZQSaJWNLijxR42qRgq0iBb5

# 添加 HTTPS 支持：
# 1. 生成私钥文件（server.key）和自签发的数字证书（server.crt）：
#     openssl req -new -nodes -x509 -out conf/server.crt -keyout conf/server.key -days 3650 -subj "/C=DE/ST=NRW/L=Earth/O=Random Company/OU=IT/CN=127.0.0.1/emailAddress=yipwinghong@outlook.com"
# 2. 配置私钥文件、数字证书文件的路径和 HTTPS 端口，供 ListenAndServeTLS 调用。
# 3. 在 main 函数中增加 ListenAndServeTLS() 调用，启动 HTTPS 端口。
# 4. 测试发起携带 CA 证书和私钥的请求：
#     curl -XGET -H "Content-Type: application/json" \
#       --cacert conf/server.crt \
#       --cert conf/server.crt \
#       --key conf/server.key \
#       https://127.0.0.1:8081/v1/user
tls:
  addr: :8081
  cert: conf/server.crt
  key: conf/server.key
log:
  writers: stdout                     # 输出位置，file 或 stdout
  logger_level: DEBUG                 # 日志级别，DEBUG、INFO、WARN、ERROR、FATAL
  logger_file: log/api-service.log    # 日志文件
  log_format_text: true               # 日志的输出格式，JSON 或 Plaintext
  rollingPolicy: size                 # 转存策略，daily 或 size
  log_rotate_date: 1                  # 转存时间
  log_rotate_size: 1                  # 转存大小
  log_backup_count: 7                 # 保留备份个数
db:
  name: db_api-service
  addr: 127.0.0.1:3306
  username: root
  password: Aa123456
docker_db:
  name: db_api-service
  addr: 127.0.0.1:3306
  username: root
  password: Aa123456

# 开发规范与技巧：
# https://juejin.cn/book/6844733730678898702/section/6844733730754396167
# https://juejin.cn/book/6844733730678898702/section/6844733730750201863